<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="db">

<!-- 구로구 제로페이 데이터 -->
<select id="zerodata" resultType="homevo">
select * from zeropay where z_addr like '%구로구%' or z_addr like '%관악구%'
</select>

<!-- 구로구 삼성카드 데이터 -->
<select id="samsungdata" resultType="homevo">
select * from samsungcard where sam_gu like '%구로구%' or sam_gu like '%동작구%' 
</select>


<!-- 페이징 처리 위한 총 게시물 수 -->
<select id="getpaging" resultType="int">
select count(*) from serviceinfo
</select>

<!-- 서비스 페이징 -->
<select id="infoPaging" resultType="infovo" parameterType="pagingvo">
select *
from
(SELECT A.*,ROWNUM AS RNUM FROM(SELECT * FROM serviceinfo ORDER BY info_num desc) A)
where rnum between  #{start} and #{end}
</select>

<!-- 서비스 상세 조회 -->
<select id="infoDetail" resultType="infovo" parameterType= "int">
select * from serviceinfo where info_num = #{info_num}
</select>
   
<!-- 검색 분류 구 얻어오기 -->
<select id="getGu" resultType="homevo">
 select distinct sam_gu from samsungcard
</select>
<!-- 검색 분류 업종별 얻어오기 -->
<select id="category" resultType="homevo">
 select distinct sam_btheme from samsungcard
</select>   
   
<!--삼성카드 지역 + 업종 검색 -->
<select id="getAlllist" resultType="homevo" parameterType="homevo">
 select * from samsungcard where sam_gu = #{sam_gu} and sam_btheme = #{sam_btheme}
</select> 

<!--삼성카드 지역만 검색 -->
<select id="regionResult" resultType="homevo" parameterType="homevo">
 select * from samsungcard where sam_gu = #{sam_gu}
</select> 

<!--삼성카드 업종만 검색 -->
<select id="categoryResult" resultType="homevo" parameterType="homevo">
 select * from samsungcard where sam_btheme = #{sam_btheme}
</select>  

<!--제로페이 지역 + 업종 검색 -->
<select id="zeroAlllist" resultType="homevo" parameterType="homevo">
 select * from zeropay where z_addr like  '%' || #{z_addr} || '%' and z_btheme = #{z_btheme}
</select> 

<!--제로페이 지역만 검색 -->
<select id="zeroregionResult" resultType="homevo" parameterType="homevo">
 select * from zeropay where z_addr like '%' || #{z_addr} || '%'
</select> 

<!--제로페이 업종만 검색 -->
<select id="zerocategoryResult" resultType="homevo" parameterType="homevo">
 select * from zeropay where z_btheme = #{z_btheme}
</select>   
  
<!--삼성카드 검색 detail -->
<select id="detailresult" resultType="homevo" parameterType="int">
 select * from samsungcard where sam_num = #{sam_num}
</select> 

<!-- 제로페이 검색 detail -->
<select id="zeroresult" resultType="homevo" parameterType="int">
 select * from zeropay where z_num = #{z_num}
</select> 

<!-- ================================= 효진 query=========================================== -->

<!-- 구성원 확인하기 -->
<select id="checkUser" resultType="uservo" parameterType = "int">
select * from users where mas_num = #{mas_num}
</select>

<!-- 구성원 신청 허락하기 -->
 <update id="updateConfirm" parameterType = "int">
update users set confirm = 2 where u_num = #{u_num}
</update>

<!-- 가계부 총 지원금 확인하기 -->
<select id = "totalMoney" resultType="uservo" parameterType = "int">
select familynum, howtoget from users where confirm = 0 and mas_num = #{mas_num}
</select>

<!-- 신용카드/체크카드 사용시 sql -->
<insert id = "insertPayment" parameterType="paymentvo">
insert into payment(paydate, money, pay_num, u_num, mas_num, sam_num, memo) values 
(TO_DATE(#{paydate}, 'YYYY-MM-DD'), #{money}, payment_seq.nextval, #{u_num}, #{mas_num}, #{sam_num}, #{memo})
</insert>

<!-- 제로페이 사용시 sql -->
<insert id = "insertPaymentZ" parameterType="paymentvo">
insert into payment(paydate, money, z_num, pay_num, u_num, mas_num, memo) values 
(TO_DATE(#{paydate}, 'YYYY-MM-DD'), #{money}, #{z_num}, payment_seq.nextval, #{u_num}, #{mas_num}, #{memo})
</insert>

<!-- 지출내역 확인하기 - 카드 -->
<select id = "showpayment" resultType="paymentvo" parameterType = "int">
select TO_CHAR(p.paydate,'YYYY-MM-DD') as paydate, p.money, s.sam_name, u.name, p.memo, p.u_num, p.pay_num from payment p, samsungcard s, users u 
where p.sam_num = s.sam_num and p.u_num = u.u_num and p.mas_num = #{mas_num} ORDER BY paydate
</select>

<!-- 지출내역 확인하기 - 제로 -->
<select id = "showpayment_zero" resultType="paymentvo" parameterType = "int">
select TO_CHAR(p.paydate,'YYYY-MM-DD') as paydate, p.money, z.z_name, u.name, p.memo, p.u_num, p.pay_num from payment p, zeropay z, users u 
where p.z_num = z.z_num and p.u_num = u.u_num and p.mas_num = #{mas_num} ORDER BY paydate
</select>

<!-- 사용내역 총합 -->
<select id = "useMoneyTotal" resultType="String" parameterType = "int">
select SUM(money) as total from payment where mas_num = #{mas_num}
</select>

<!-- 가계부 내역 삭제 -->
<delete id="deletePayment" parameterType="paymentvo">
delete payment where pay_num = #{pay_num} and u_num = #{u_num}
</delete>

<!-- 구성원 정보 가져오기 -->
<select id="getUser" resultType="uservo" parameterType = "int">
select * from users where u_num = #{u_num}
</select>



<!--  ======================================  신지 test   ==================================== -->

<!-- 로그인 -->
<select id ="login" resultType="int" parameterType="uservo">
select count(*)
from users
where id=#{id} and pw=#{pw}
</select>

<!-- mas_num, u_num 가져와서 세션에 저장 -->
<select id="getMasnum" resultType ="uservo" parameterType="uservo">
select mas_num, u_num, confirm
from users
where id=#{id}
</select>

<!-- 세대주 가입 - 기 가입자:어떤 정수 / 미가입자:0 -->
<select id ="alreadyJoin" resultType="int" parameterType="String">
select count(*)
from users u , masters m
where u.mas_num = m.mas_num and 
m.mas_num = (select mas_num from masters where jumin = #{jumin})
</select>

<!-- 세대주인지 확인하기 -->
<select id="masCheck" resultType ="int" parameterType ="masvo">
select count(*)
from masters   
where ((select mas_name from masters where jumin= #{jumin})= #{name} and jumin=#{jumin})
</select>

<!-- id 유효성 검사 -->
<select id="idCheck" resultType ="int" parameterType="String">
select count(*) from users
where id =#{id}
</select>

<!-- 가족 구성원 수 이상으로 가입X -->
<select id="fnumCheck" resultType ="int" parameterType ="String">
select count(*)
from users
where mas_num = 
(select mas_num 
from users
where id=#{id})
</select>

<!-- 세대주 회원가입 -->
<insert id = "join" parameterType="uservo">
insert into users 
(u_num, id, pw, name, phone, addr, howtoget, confirm, mas_num, familynum) values
(user_seq.nextval, #{id}, #{pw}, #{name}, #{phone}, #{addr}, #{howtoget}, 0, 
(select mas_num from masters where jumin=#{jumin}), #{familynum})
</insert>

<!-- 세대주 검색 -->
<select id="masSelect" resultType ="int" parameterType="String">
select count(*) from users
where id =#{id} and confirm=0
</select>

<select id ="autoSelect" resultType="uservo" parameterType="String">
select addr, howtoget, mas_num, familynum from users where id=#{mas_id}
</select>


<!-- 구성원 회원가입 -->
<insert id = "joinMember" parameterType="uservo" >
insert into users 
(u_num, id, pw, name, phone, addr, howtoget, confirm, mas_num, familynum) values
(user_seq.nextval, #{id}, #{pw}, #{name}, #{phone}, #{addr}, #{howtoget}, 1,
#{mas_num}, #{familynum})
</insert>

<!-- 그룹 내의 구성원 정보 모두 가져오기 -->
<select id="getGroup" resultType="uservo" parameterType = "int">
select name, u_num from users where mas_num = #{mas_num} order by u_num
</select>

<!-- 사용자의 사용 총 금액 -->
<select id="getPayment" resultType="paymentvo" parameterType = "int">
select sum(money) as total, u_num from payment group by u_num, mas_num having mas_num = #{mas_num} order by u_num
</select>

</mapper>
